{"version":3,"sources":["components/ui/MarkdownStyled.js","components/ui/PreviewerStyled.js","components/home/Previewer.js","components/home/Markdown.js","components/home/MarkdownPreviewer.js","App.js","reportWebVitals.js","index.js"],"names":["MarkdownContainer","styled","div","MarkdownWrapper","MarkdownHeadline","HeadlineTitle","h3","TextareaWrapper","MarkdownTextArea","textarea","PageHeader","h1","PreviewerContainer","PreviewerWrapper","PreviewerHeadline","PreviewerTextWrapper","PreviewerText","Previewer","areaText","Fragment","dangerouslySetInnerHTML","__html","Markdown","useState","setAreaText","onChange","event","target","value","MarkdownPreviewer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w8CAEO,IAAMA,EAAoBC,IAAOC,IAAV,KAUjBC,EAAkBF,IAAOC,IAAV,KAKfE,EAAmBH,IAAOC,IAAV,KAOhBG,EAAgBJ,IAAOK,GAAV,KAMbC,EAAkBN,IAAOC,IAAV,KAKfM,EAAmBP,IAAOQ,SAAV,KAehBC,EAAaT,IAAOU,GAAV,K,86BChDhB,IAAMC,EAAqBX,IAAOC,IAAV,KAYlBW,EAAmBZ,IAAOC,IAAV,KAKhBY,EAAoBb,IAAOC,IAAV,KAQjBG,EAAgBJ,IAAOK,GAAV,KAMbS,EAAuBd,IAAOC,IAAV,KAQpBc,EAAgBf,IAAOC,IAAV,KCjBXe,EAtBG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACI,cAAC,IAAMC,SAAP,UACI,cAACP,EAAD,UACI,eAACC,EAAD,WACI,cAACC,EAAD,UACI,cAAC,EAAD,0BAIR,cAACC,EAAD,UACI,cAACC,EAAD,UACI,qBAAKI,wBAAyB,CAACC,OAAQH,iBCehDI,EAzBE,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACZL,EADY,KACFM,EADE,KAGnB,OACI,eAAC,IAAML,SAAP,WACI,cAACT,EAAD,iHACA,cAACV,EAAD,UACI,eAACG,EAAD,WACI,cAACC,EAAD,UACI,cAACC,EAAD,oCAIJ,cAACE,EAAD,UACI,cAACC,EAAD,CAAkBiB,SAAU,SAACC,GAAD,OAAWF,EAAYE,EAAMC,OAAOC,iBAM5E,cAAC,EAAD,CAAWV,SAAUA,QCblBW,EARW,WACtB,OACI,cAAC,IAAMV,SAAP,UACI,cAAC,EAAD,OCGGW,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCQWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4027f1c3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MarkdownContainer = styled.div`\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  height: 250px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n`;\r\nexport const MarkdownWrapper = styled.div`\r\n  box-shadow: 0 0 10px #719ece;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const MarkdownHeadline = styled.div`\r\n  background: #123089;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 10%;\r\n`;\r\n\r\nexport const HeadlineTitle = styled.h3`\r\n  color: #fff;\r\n  margin-left: 5px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const TextareaWrapper = styled.div`\r\n  width: 100%;\r\n  height: 90%;\r\n  margin: 0;\r\n`;\r\nexport const MarkdownTextArea = styled.textarea`\r\n  background-color: #204ecf;\r\n  color: #fff;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  resize: none;\r\n  min-height: 100%;\r\n  &:focus {\r\n    outline: none !important;\r\n  }\r\n`;\r\n\r\nexport const PageHeader = styled.h1`\r\n  text-align: center;\r\n  margin: 5px 35px 5px 35px;\r\n  color: #fff;\r\n  font-size: 22px;\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 18px;\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const PreviewerContainer = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-top: 35px;\r\n  height: 100%;\r\n  min-height: 250px;\r\n  background: #eee;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n`;\r\nexport const PreviewerWrapper = styled.div`\r\n  box-shadow: 0 0 8px #719ece;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\nexport const PreviewerHeadline = styled.div`\r\n  background: #123089;\r\n  border: 1px solid black;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 10%;\r\n`;\r\n\r\nexport const HeadlineTitle = styled.h3`\r\n  color: #fff;\r\n  margin: 5px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const PreviewerTextWrapper = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  min-height: 225px;\r\n  background-color: #204ecf;\r\n  color: #fff;\r\n`;\r\n\r\nexport const PreviewerText = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n","import React from \"react\"\r\nimport { PreviewerContainer, PreviewerWrapper, PreviewerHeadline, HeadlineTitle, PreviewerTextWrapper, PreviewerText } from \"../ui/PreviewerStyled\"\r\nconst Previewer = ({areaText}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <PreviewerContainer>\r\n                <PreviewerWrapper>\r\n                    <PreviewerHeadline>\r\n                        <HeadlineTitle>\r\n                            Previewer\r\n                        </HeadlineTitle>\r\n                    </PreviewerHeadline>\r\n                <PreviewerTextWrapper>\r\n                    <PreviewerText>\r\n                        <div dangerouslySetInnerHTML={{__html: areaText}} />\r\n                    </PreviewerText>\r\n                </PreviewerTextWrapper>\r\n\r\n                </PreviewerWrapper>\r\n            </PreviewerContainer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Previewer","import React, { useState } from \"react\"\r\nimport { MarkdownContainer, MarkdownWrapper, MarkdownHeadline, HeadlineTitle, TextareaWrapper, MarkdownTextArea, PageHeader } from \"../ui/MarkdownStyled\"\r\nimport Previewer from \"./Previewer\"\r\n\r\nconst Markdown = () => {\r\n    const [areaText, setAreaText] = useState(\"\");\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <PageHeader>HTML Markdown previewer website. Just write raw HTML and CSS and see it rendered in the previewer.</PageHeader>\r\n            <MarkdownContainer>\r\n                <MarkdownWrapper>\r\n                    <MarkdownHeadline>\r\n                        <HeadlineTitle>\r\n                            Petar Boshkoski CLI\r\n                        </HeadlineTitle>\r\n                    </MarkdownHeadline>\r\n                    <TextareaWrapper>\r\n                        <MarkdownTextArea onChange={(event) => setAreaText(event.target.value)}>\r\n                        </MarkdownTextArea>\r\n                    </TextareaWrapper>\r\n                </MarkdownWrapper>\r\n            </MarkdownContainer>\r\n\r\n            <Previewer areaText={areaText}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Markdown","import React from \"react\"\r\nimport Markdown from \"./Markdown\"\r\n\r\nconst MarkdownPreviewer = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Markdown />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MarkdownPreviewer","import MarkdownPreviewer from \"./components/home/MarkdownPreviewer\"\nfunction App() {\n  return (\n    <>\n    <MarkdownPreviewer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}